#!/usr/bin/env python

import click
from app.task import Task
from os import path
from app import config
import cli_ui
from app.query import all_tasks, save, tasks_by_title, all_tags, tasks_tagged


@click.group()
def gtu():
    pass

@gtu.command()
@click.argument('task_title', required=True)
@click.option('--description', '-d', default='')
@click.option('--tags', '-t',  multiple=True)
def add(task_title, description, tags):
    click.echo('adding a new task')
    click.echo('tags value is: ' + str(tags))
    task = Task(task_title, description=description, tags=tags)
    save(task)

@gtu.command()
def ls():
    click.echo('ls tasks...')
    for task in all_tasks():
        click.echo('task.title=' + task.title)
        click.echo(task.serialize())


@gtu.command()
@click.option('--file-persistence-base', required=False)
def init(file_persistence_base):
    click.confirm('Do you want to continue?\n\tThis will remove your current tasks and config.', abort=True)
    config_file = config.init()
    click.echo('init...')
    click.echo('config_file='+config_file)
    written_config = config.write(file_persistence_base)
    click.echo('written_config='+written_config)

@gtu.command()
def show_config():
    click.echo('config=' + config.get_str())


@gtu.command()
def details():
    tasks = tasks_by_title()
    choice = cli_ui.ask_choice("Select task, <Enter> to exit.", choices=list(tasks.keys()))
    if not choice:
        return

    selected_task = tasks[choice]
    pprint_task(selected_task)


@gtu.command()
def alltags():
    cli_ui.info('all tags: ', cli_ui.yellow, all_tags())


@gtu.command()
@click.argument('tag', default='inbox')
def tagged(tag):
    tasks = tasks_tagged(tag)
    cli_ui.info('Tasks with tag: ', cli_ui.yellow, tasks)
    for task in tasks:
        pprint_task(task)

def pprint_task(task):
    cli_ui.info(cli_ui.bold, cli_ui.blue, 'Title: ', cli_ui.reset, '"', task.title, '"', cli_ui.yellow, task.tags)
    cli_ui.info(cli_ui.bold, cli_ui.blue, 'Description: ', cli_ui.reset, '"', task.description, '"')

if __name__ == '__main__':
    gtu()
